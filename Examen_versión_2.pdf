{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP9O8sEW/lxclklLZ7yXka6"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "#1. Considere la función\n",
        "$$f(x)\\begin{cases}\n",
        "|x| \\ &\\text{si } -1 \\leq x \\leq 1 \\\\\n",
        "\\ 0 \\ &\\text{en otro caso }\n",
        "\\end{cases}$$\n"
      ],
      "metadata": {
        "id": "I8YOBQDsxBOd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Importamos las librerías a ocupar\n",
        "import random as rnd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "POE5f-JIzJzu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=np.linspace(-1,1,100) #rango en x de [-1,1]\n",
        "y=abs(x) #función f(x)\n",
        "plt.figure(figsize=(6,5)) #Crear figura\n",
        "plt.plot(x,y) #Grafica función |x|\n",
        "plt.axhline(y=1, color='g', linestyle='--') #Máximo de la función f(x)\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('f(x)=|x|')\n",
        "#Mostrar\n",
        "plt.show() #Gráfica"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 465
        },
        "id": "mYdJ1ggdzNBS",
        "outputId": "03c628aa-6e0f-4eef-b18d-e98a98efd4cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##a)Dé la transformada inversa"
      ],
      "metadata": {
        "id": "LSsUvVudzKEJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def F_inversa(n): #Esta función devuelve una lista con valores de x de la función inversa\n",
        "  lista1=[]\n",
        "  for i in range(n):\n",
        "    u=rnd.uniform(0,1) #Genera un número aleatorio entre 0 y 1\n",
        "    if 0<u<1/2: #intervalo de (0,1/2)\n",
        "      x=-np.sqrt(1-2*u)\n",
        "      lista1.append(x)\n",
        "    else: #intervalo de (1/2,1)\n",
        "      x=np.sqrt(2*u-1)\n",
        "      lista1.append(x)\n",
        "  return lista1"
      ],
      "metadata": {
        "id": "OViOmTjpx37f"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "A=F_inversa(10000) #Genera 10000 valores de x de la función inversa"
      ],
      "metadata": {
        "id": "FhqnMIjRy0X_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(A,bins=50,color=\"indigo\") #Histograma de G el cual tiene que tener una forma similar\n",
        "            # a la función de densidad\n",
        "plt.xlabel('u')\n",
        "plt.ylabel('F^-1(u)')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "wHX1qyTzy3tY",
        "outputId": "d387b3fa-2284-41c6-f3ed-a8fcd8b16688"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##b) Aceptación y rechazo"
      ],
      "metadata": {
        "id": "84zfuA0N1fDn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def f(x) : #Devuelve el valor de f(x) para cada valor de x\n",
        " return abs(x)"
      ],
      "metadata": {
        "id": "dDH0UM4H0lz0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def g(x) : #Devuelve una lista de 1/2 de tamaño x\n",
        " return np.full(x,1/2)"
      ],
      "metadata": {
        "id": "n57RFHJv0o1I"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def AceptyRechazo(n): #Esta función devuelve muestras generadas\n",
        " lista2=[]      #por el método de aceptación y rechazo\n",
        " for i in range(n):\n",
        "  X=rnd.uniform(-1,1) #Generar un número aleatorio entre -1 y 1\n",
        "  U=rnd.uniform(0,1) #Generar un número aleatorio entre 0 y 1\n",
        "  if U<f(X): #Aceptación U<f(X)/c*g(x) y en caso contrario Rechazo\n",
        "   lista2.append(X)\n",
        " return lista2"
      ],
      "metadata": {
        "id": "633OwmXq0tJx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "B=AceptyRechazo(10000)\n",
        "G=g(10000) #Distribución uniforme"
      ],
      "metadata": {
        "id": "o9wR21Rj2UVp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.linspace(-1, 1, 10000) #Rango del eje de las x, del mismo tamaño que\n",
        "                             #devuelve la función AceptyRechazo y g(x)\n",
        "plt.hist(B, bins=50, density=True, alpha=0.6, color='indigo', label='f(x)')\n",
        "plt.plot(x, f(x), 'r', label='Distribución objetivo f(x)/c*g(x)')\n",
        "\n",
        "plt.plot(x, G, label='Distribución Uniforme g(x)') #Grafica de g(x)\n",
        "\n",
        "plt.legend()\n",
        "plt.title('Muestras generadas usando el método de rechazo')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 453
        },
        "id": "JxsjsQfw2Xtr",
        "outputId": "e84f15fc-8817-4d83-847f-054bc44d7362"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##c)Método de composición"
      ],
      "metadata": {
        "id": "wbVvyndMzyx-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def F_u(n) : #Devuelve una lista con los valores de la función inversa\n",
        " lista3=[]\n",
        " for i in range(n):\n",
        "  u_1=rnd.random()#Generar dos números aleatorios U(0,1)\n",
        "  u_2=rnd.random() #variable a trabajar en la condiciones:\n",
        "  if u_1<=1/2: #intervalo de valores menores que 1/2\n",
        "   x=-np.sqrt(1-u_2)\n",
        "   lista3.append(x)\n",
        "  else: #intervalo de valores mayor o igual a 1/2\n",
        "   x=np.sqrt(u_2)\n",
        "   lista3.append(x)\n",
        " return lista3"
      ],
      "metadata": {
        "id": "7N6V7sqU3Yd8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "C=F_u(10000) #Manda a llamar la función con n=10000"
      ],
      "metadata": {
        "id": "8W8eB8j5DdUl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(A,bins=50,color=\"indigo\") #Histograma de G el cual tiene que tener una forma similar\n",
        "            # a la función de densidad\n",
        "plt.xlabel('u')\n",
        "plt.ylabel('F^-1(u)')\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "lRL-IedVDkZX",
        "outputId": "7f3bb4cc-a3ff-457d-ffd7-859229800e47"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#2 Considere los dos generadores congruenciales siguientes:\n",
        "1. $x_{i+1}=(5x_i+7) mod (128)$ con $x_0=10$\n",
        "2. $x_{i+1}=(15x_i+9) mod (128)$ con $x_0=10$\n",
        "Y realice lo siguiente\n",
        "##a)Elija el mejor generador. Justifique su respuesta\n"
      ],
      "metadata": {
        "id": "UWf5QjbxEAiD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Generador_Congruencial(x_n,a,c,m):\n",
        "  print(\"{:<8} {:<10} {:<10} {:<8} {:<15}\".format(\"n\", \"x_n\", \"ax_n+c\", \"ax_n+c % m\", \"x_n/m\"))#Encabezado de la tabla\n",
        "  x_i=[] #Lista de valores de x_n\n",
        "  for n in range(0,m):\n",
        "   x_i.append(x_n)\n",
        "   P=(a*x_n) + c #Función\n",
        "   M=P%m #módulo entre producto y m\n",
        "   N=x_n/m #como los números son mayores a 1 y trabajamos con valores uniformemente distribuimos\n",
        "          #dividimos la semilla entre un número conveniente, siendo este m\n",
        "   N=round(N,4) #redondeamos decimales\n",
        "   d=[[n, x_n, P, M, N]] #datos de la tabala\n",
        "   print(\"{:<8} {:<10} {:<10} {:<8} {:<15}\".format(n, x_n, P, M, N))\n",
        "   x_n=M #nueva semilla y se reinicia el método hasta m datos\n",
        "  return x_i"
      ],
      "metadata": {
        "id": "uAt_aRmLEkVu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "G1=Generador_Congruencial(10,5,7,128) #Generador 1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Y9LvtuS2LCDC",
        "outputId": "f22e2c7b-6433-4519-ef87-ede8a6516568"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "n        x_n        ax_n+c     ax_n+c % m x_n/m          \n",
            "0        10         57         57       0.0781         \n",
            "1        57         292        36       0.4453         \n",
            "2        36         187        59       0.2812         \n",
            "3        59         302        46       0.4609         \n",
            "4        46         237        109      0.3594         \n",
            "5        109        552        40       0.8516         \n",
            "6        40         207        79       0.3125         \n",
            "7        79         402        18       0.6172         \n",
            "8        18         97         97       0.1406         \n",
            "9        97         492        108      0.7578         \n",
            "10       108        547        35       0.8438         \n",
            "11       35         182        54       0.2734         \n",
            "12       54         277        21       0.4219         \n",
            "13       21         112        112      0.1641         \n",
            "14       112        567        55       0.875          \n",
            "15       55         282        26       0.4297         \n",
            "16       26         137        9        0.2031         \n",
            "17       9          52         52       0.0703         \n",
            "18       52         267        11       0.4062         \n",
            "19       11         62         62       0.0859         \n",
            "20       62         317        61       0.4844         \n",
            "21       61         312        56       0.4766         \n",
            "22       56         287        31       0.4375         \n",
            "23       31         162        34       0.2422         \n",
            "24       34         177        49       0.2656         \n",
            "25       49         252        124      0.3828         \n",
            "26       124        627        115      0.9688         \n",
            "27       115        582        70       0.8984         \n",
            "28       70         357        101      0.5469         \n",
            "29       101        512        0        0.7891         \n",
            "30       0          7          7        0.0            \n",
            "31       7          42         42       0.0547         \n",
            "32       42         217        89       0.3281         \n",
            "33       89         452        68       0.6953         \n",
            "34       68         347        91       0.5312         \n",
            "35       91         462        78       0.7109         \n",
            "36       78         397        13       0.6094         \n",
            "37       13         72         72       0.1016         \n",
            "38       72         367        111      0.5625         \n",
            "39       111        562        50       0.8672         \n",
            "40       50         257        1        0.3906         \n",
            "41       1          12         12       0.0078         \n",
            "42       12         67         67       0.0938         \n",
            "43       67         342        86       0.5234         \n",
            "44       86         437        53       0.6719         \n",
            "45       53         272        16       0.4141         \n",
            "46       16         87         87       0.125          \n",
            "47       87         442        58       0.6797         \n",
            "48       58         297        41       0.4531         \n",
            "49       41         212        84       0.3203         \n",
            "50       84         427        43       0.6562         \n",
            "51       43         222        94       0.3359         \n",
            "52       94         477        93       0.7344         \n",
            "53       93         472        88       0.7266         \n",
            "54       88         447        63       0.6875         \n",
            "55       63         322        66       0.4922         \n",
            "56       66         337        81       0.5156         \n",
            "57       81         412        28       0.6328         \n",
            "58       28         147        19       0.2188         \n",
            "59       19         102        102      0.1484         \n",
            "60       102        517        5        0.7969         \n",
            "61       5          32         32       0.0391         \n",
            "62       32         167        39       0.25           \n",
            "63       39         202        74       0.3047         \n",
            "64       74         377        121      0.5781         \n",
            "65       121        612        100      0.9453         \n",
            "66       100        507        123      0.7812         \n",
            "67       123        622        110      0.9609         \n",
            "68       110        557        45       0.8594         \n",
            "69       45         232        104      0.3516         \n",
            "70       104        527        15       0.8125         \n",
            "71       15         82         82       0.1172         \n",
            "72       82         417        33       0.6406         \n",
            "73       33         172        44       0.2578         \n",
            "74       44         227        99       0.3438         \n",
            "75       99         502        118      0.7734         \n",
            "76       118        597        85       0.9219         \n",
            "77       85         432        48       0.6641         \n",
            "78       48         247        119      0.375          \n",
            "79       119        602        90       0.9297         \n",
            "80       90         457        73       0.7031         \n",
            "81       73         372        116      0.5703         \n",
            "82       116        587        75       0.9062         \n",
            "83       75         382        126      0.5859         \n",
            "84       126        637        125      0.9844         \n",
            "85       125        632        120      0.9766         \n",
            "86       120        607        95       0.9375         \n",
            "87       95         482        98       0.7422         \n",
            "88       98         497        113      0.7656         \n",
            "89       113        572        60       0.8828         \n",
            "90       60         307        51       0.4688         \n",
            "91       51         262        6        0.3984         \n",
            "92       6          37         37       0.0469         \n",
            "93       37         192        64       0.2891         \n",
            "94       64         327        71       0.5            \n",
            "95       71         362        106      0.5547         \n",
            "96       106        537        25       0.8281         \n",
            "97       25         132        4        0.1953         \n",
            "98       4          27         27       0.0312         \n",
            "99       27         142        14       0.2109         \n",
            "100      14         77         77       0.1094         \n",
            "101      77         392        8        0.6016         \n",
            "102      8          47         47       0.0625         \n",
            "103      47         242        114      0.3672         \n",
            "104      114        577        65       0.8906         \n",
            "105      65         332        76       0.5078         \n",
            "106      76         387        3        0.5938         \n",
            "107      3          22         22       0.0234         \n",
            "108      22         117        117      0.1719         \n",
            "109      117        592        80       0.9141         \n",
            "110      80         407        23       0.625          \n",
            "111      23         122        122      0.1797         \n",
            "112      122        617        105      0.9531         \n",
            "113      105        532        20       0.8203         \n",
            "114      20         107        107      0.1562         \n",
            "115      107        542        30       0.8359         \n",
            "116      30         157        29       0.2344         \n",
            "117      29         152        24       0.2266         \n",
            "118      24         127        127      0.1875         \n",
            "119      127        642        2        0.9922         \n",
            "120      2          17         17       0.0156         \n",
            "121      17         92         92       0.1328         \n",
            "122      92         467        83       0.7188         \n",
            "123      83         422        38       0.6484         \n",
            "124      38         197        69       0.2969         \n",
            "125      69         352        96       0.5391         \n",
            "126      96         487        103      0.75           \n",
            "127      103        522        10       0.8047         \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "G2=Generador_Congruencial(10,15,9,128) #Generador 2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mrMkCOVOMYIX",
        "outputId": "ed537b47-203f-4471-c59b-e84aaedada82"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "n        x_n        ax_n+c     ax_n+c % m x_n/m          \n",
            "0        10         159        31       0.0781         \n",
            "1        31         474        90       0.2422         \n",
            "2        90         1359       79       0.7031         \n",
            "3        79         1194       42       0.6172         \n",
            "4        42         639        127      0.3281         \n",
            "5        127        1914       122      0.9922         \n",
            "6        122        1839       47       0.9531         \n",
            "7        47         714        74       0.3672         \n",
            "8        74         1119       95       0.5781         \n",
            "9        95         1434       26       0.7422         \n",
            "10       26         399        15       0.2031         \n",
            "11       15         234        106      0.1172         \n",
            "12       106        1599       63       0.8281         \n",
            "13       63         954        58       0.4922         \n",
            "14       58         879        111      0.4531         \n",
            "15       111        1674       10       0.8672         \n",
            "16       10         159        31       0.0781         \n",
            "17       31         474        90       0.2422         \n",
            "18       90         1359       79       0.7031         \n",
            "19       79         1194       42       0.6172         \n",
            "20       42         639        127      0.3281         \n",
            "21       127        1914       122      0.9922         \n",
            "22       122        1839       47       0.9531         \n",
            "23       47         714        74       0.3672         \n",
            "24       74         1119       95       0.5781         \n",
            "25       95         1434       26       0.7422         \n",
            "26       26         399        15       0.2031         \n",
            "27       15         234        106      0.1172         \n",
            "28       106        1599       63       0.8281         \n",
            "29       63         954        58       0.4922         \n",
            "30       58         879        111      0.4531         \n",
            "31       111        1674       10       0.8672         \n",
            "32       10         159        31       0.0781         \n",
            "33       31         474        90       0.2422         \n",
            "34       90         1359       79       0.7031         \n",
            "35       79         1194       42       0.6172         \n",
            "36       42         639        127      0.3281         \n",
            "37       127        1914       122      0.9922         \n",
            "38       122        1839       47       0.9531         \n",
            "39       47         714        74       0.3672         \n",
            "40       74         1119       95       0.5781         \n",
            "41       95         1434       26       0.7422         \n",
            "42       26         399        15       0.2031         \n",
            "43       15         234        106      0.1172         \n",
            "44       106        1599       63       0.8281         \n",
            "45       63         954        58       0.4922         \n",
            "46       58         879        111      0.4531         \n",
            "47       111        1674       10       0.8672         \n",
            "48       10         159        31       0.0781         \n",
            "49       31         474        90       0.2422         \n",
            "50       90         1359       79       0.7031         \n",
            "51       79         1194       42       0.6172         \n",
            "52       42         639        127      0.3281         \n",
            "53       127        1914       122      0.9922         \n",
            "54       122        1839       47       0.9531         \n",
            "55       47         714        74       0.3672         \n",
            "56       74         1119       95       0.5781         \n",
            "57       95         1434       26       0.7422         \n",
            "58       26         399        15       0.2031         \n",
            "59       15         234        106      0.1172         \n",
            "60       106        1599       63       0.8281         \n",
            "61       63         954        58       0.4922         \n",
            "62       58         879        111      0.4531         \n",
            "63       111        1674       10       0.8672         \n",
            "64       10         159        31       0.0781         \n",
            "65       31         474        90       0.2422         \n",
            "66       90         1359       79       0.7031         \n",
            "67       79         1194       42       0.6172         \n",
            "68       42         639        127      0.3281         \n",
            "69       127        1914       122      0.9922         \n",
            "70       122        1839       47       0.9531         \n",
            "71       47         714        74       0.3672         \n",
            "72       74         1119       95       0.5781         \n",
            "73       95         1434       26       0.7422         \n",
            "74       26         399        15       0.2031         \n",
            "75       15         234        106      0.1172         \n",
            "76       106        1599       63       0.8281         \n",
            "77       63         954        58       0.4922         \n",
            "78       58         879        111      0.4531         \n",
            "79       111        1674       10       0.8672         \n",
            "80       10         159        31       0.0781         \n",
            "81       31         474        90       0.2422         \n",
            "82       90         1359       79       0.7031         \n",
            "83       79         1194       42       0.6172         \n",
            "84       42         639        127      0.3281         \n",
            "85       127        1914       122      0.9922         \n",
            "86       122        1839       47       0.9531         \n",
            "87       47         714        74       0.3672         \n",
            "88       74         1119       95       0.5781         \n",
            "89       95         1434       26       0.7422         \n",
            "90       26         399        15       0.2031         \n",
            "91       15         234        106      0.1172         \n",
            "92       106        1599       63       0.8281         \n",
            "93       63         954        58       0.4922         \n",
            "94       58         879        111      0.4531         \n",
            "95       111        1674       10       0.8672         \n",
            "96       10         159        31       0.0781         \n",
            "97       31         474        90       0.2422         \n",
            "98       90         1359       79       0.7031         \n",
            "99       79         1194       42       0.6172         \n",
            "100      42         639        127      0.3281         \n",
            "101      127        1914       122      0.9922         \n",
            "102      122        1839       47       0.9531         \n",
            "103      47         714        74       0.3672         \n",
            "104      74         1119       95       0.5781         \n",
            "105      95         1434       26       0.7422         \n",
            "106      26         399        15       0.2031         \n",
            "107      15         234        106      0.1172         \n",
            "108      106        1599       63       0.8281         \n",
            "109      63         954        58       0.4922         \n",
            "110      58         879        111      0.4531         \n",
            "111      111        1674       10       0.8672         \n",
            "112      10         159        31       0.0781         \n",
            "113      31         474        90       0.2422         \n",
            "114      90         1359       79       0.7031         \n",
            "115      79         1194       42       0.6172         \n",
            "116      42         639        127      0.3281         \n",
            "117      127        1914       122      0.9922         \n",
            "118      122        1839       47       0.9531         \n",
            "119      47         714        74       0.3672         \n",
            "120      74         1119       95       0.5781         \n",
            "121      95         1434       26       0.7422         \n",
            "122      26         399        15       0.2031         \n",
            "123      15         234        106      0.1172         \n",
            "124      106        1599       63       0.8281         \n",
            "125      63         954        58       0.4922         \n",
            "126      58         879        111      0.4531         \n",
            "127      111        1674       10       0.8672         \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def Comprobar_ciclo(L,x_0): #Esta función recorre la lista de números generados (x_n)\n",
        "  M=0 #para llevar la cuenta de las apariciones de la semilla x_0\n",
        "  for i, item in enumerate(L):\n",
        "    if item==x_0:\n",
        "      M+=1\n",
        "      if M==2: #cuenta la aparición en 0 y en la posición i\n",
        "        return i # Devolver la posición de la segunda aparición\n",
        "  return None  # Si no se encontró la segunda aparición, devolver None"
      ],
      "metadata": {
        "id": "6mKpQJynOYN5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "H=Comprobar_ciclo(G1,10) #Comprueba el ciclo del generador 1\n",
        "I=Comprobar_ciclo(G2,10) #Comprueba el ciclo del generador 2"
      ],
      "metadata": {
        "id": "SgxVw80kc98d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "if H==None:\n",
        "  print(\"El mejor generador es el 1\")\n",
        "if I==None:\n",
        "  print(\"El mejor generador es el 2\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "NXEMbLUXewU6",
        "outputId": "0b00287a-1eab-4845-814a-07dc3a3e2212"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "El mejor generador es el 1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##b)Use el generador que eligió para producir una pequeña muestra de 6 valores de la variable $X\\sim N(0,1)$\n",
        "###1. Podemos generar una muestra $X_i\\sim N(0,1)$, usando la aproximación\n",
        "$$X_i=\\frac{U_i^{0.135}-(1-U_i)^{0.135}}{0.1975}$$"
      ],
      "metadata": {
        "id": "l1MKcmVzFtJ3"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def Aproximación(lista):\n",
        "  print(\"{:<8} {:<10} {:<10}\".format(\"i\", \"U_i\", \"X_i\"))#Encabezado de la tabla\n",
        "  valores_u=[elemento/128 for elemento in lista[1:7]] #los números generados empiezan en 1, y tomamos 6\n",
        "                            #se divide en 128 (m) para tener valores ente 0 y 1\n",
        "  valores_x=[] #almacena los valores x\n",
        "  n=0\n",
        "  for u in valores_u: #recorre la lista de números generados del generador 1\n",
        "   x=((u**0.135)-(1-u)**0.135)/0.1975\n",
        "   x=round(x,4)\n",
        "   d=[[n, u, x]] #datos de la tabla\n",
        "   valores_x.append(x)\n",
        "   print(\"{:<8} {:<10} {:<10}\".format(n, u, x)) #valores de la tabla\n",
        "   n+=1 #aumenta el contador para indicar el número\n",
        "  return valores_x #devuelve los valores de x"
      ],
      "metadata": {
        "id": "vll4KzjgF62m"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "J=Aproximación(G1) #Genera los valores de x del generador 1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LOwTlNY7gbND",
        "outputId": "345f6137-b644-479a-d82b-92e95037cb59"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "i        U_i        X_i       \n",
            "0        0.4453125  -0.1366   \n",
            "1        0.28125    -0.5761   \n",
            "2        0.4609375  -0.0974   \n",
            "3        0.359375   -0.3579   \n",
            "4        0.8515625  1.0409    \n",
            "5        0.3125     -0.486    \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### También podemos usar el método de Box-Muller"
      ],
      "metadata": {
        "id": "Rz0cGl3cwG8t"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import math"
      ],
      "metadata": {
        "id": "s7ZWw8lD86o2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def dividir_lista(lista): #Divide la lista en 2, para hacer pares\n",
        "  u1=[]\n",
        "  u2=[]\n",
        "  for k in range(len(lista)):\n",
        "    if k%2==0: #Elementos con posición par en U_1\n",
        "      u1.append(lista[k])\n",
        "    else:\n",
        "      u2.append(lista[k]) #Elementos con posición impar en U_2\n",
        "  return u1,u2"
      ],
      "metadata": {
        "id": "f0v1OmdfFLsy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def Box_Muller(lista): #Realiza el método para una lista\n",
        "  X=[]\n",
        "  Y=[]\n",
        "  u1,u2=dividir_lista(lista) #listas de valores u\n",
        "  for i in range(3):\n",
        "    x = np.sqrt(-2 * math.log(u1[i])) * math.cos(2 * math.pi * u2[i]) #Calcula X\n",
        "    y = np.sqrt(-2 * math.log(u1[i])) * math.sin(2 * math.pi * u2[i]) #Calcula Y\n",
        "    X.append(x)  # Añadir los resultados a la lista\n",
        "    Y.append(y)\n",
        "  return X,Y,u1,u2 #Regresa los valores de X,Y y dos listas de la lista original\n",
        "                   #con 3 datos cada uno"
      ],
      "metadata": {
        "id": "2fwAOZSS7wUj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def Tabla(lista): #Da una tabla con los valores trabajados\n",
        "  print(\"{:<5} {:<15} {:<15} {:<20} {:<8}\".format(\"i\", \"U_1\", \"U_2\", \"X\", \" Y\"))#Encabezado de la tabla\n",
        "  valores_u=[elemento/128 for elemento in lista[1:7]] #divide los elementos de la lista en m=128\n",
        "  for i in range(3):\n",
        "    X,Y,u1,u2=Box_Muller(valores_u) #genera los valores de X y Y\n",
        "    d=[[i, u1[i],u2[i], X, Y]] #datos de la tabla\n",
        "    print(\"{:<5} {:<15} {:<15} {:<20} {:<8}\".format(i, u1[i],u2[i], X[i], Y[i])) #valores de la tabla"
      ],
      "metadata": {
        "id": "FHnwM425wF9o"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "P=Tabla(G1) #Muestra los valores de la tabla"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yHqg0G3B3RGO",
        "outputId": "8fc4019a-f57a-4f06-8390-9943530dd188"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "i     U_1             U_2             X                     Y      \n",
            "0     0.4453125       0.28125         -0.2481528951484249  1.2475488498650418\n",
            "1     0.4609375       0.359375        -0.78955478996597    0.962075295218409\n",
            "2     0.8515625       0.3125          -0.2169395767948636  0.5237384685136393\n"
          ]
        }
      ]
    }
  ]
}